import re

import PySimpleGUI as sg
import sqlite3 as sl

sg.theme('Material1')

con =  sl.connect("main_data.db")  #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
cursor = con.cursor()
fonts = [
    ('Segoe UI', 14),
    ('Segoe UI', 11)
]

def make_main_menu():
    layout = [  # –ù–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–µ—Å–µ—Ç
        [sg.Text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', font=fonts[0])],
        [sg.Text('–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ—Ä–≥–∞–Ω–∞–π–∑–µ—Ä', font=fonts[0])],
        [sg.Text('*–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!', font=fonts[1], key='error_mes', visible=False)],
        [sg.Text('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω   ', font=fonts[1]),
         sg.InputText(size=(20, 1), key='input_main_login')],
        [sg.Text('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å', font=fonts[1]),
         sg.InputText(size=(20, 1), key='input_main_pass', password_char='*')],
        [sg.Button(button_text=('–í–æ–π—Ç–∏'), size=(20, 1), key=('enter'))],
        [sg.Text('–£ –í–∞—Å –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?', font=fonts[1])],
        [sg.Button(button_text=('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'), size=(30, 1), key=('register'))],
        [sg.Text('*–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω, –æ—Å—Ç–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ –Ω–µ–≥–æ!', font=fonts[1], key='complete_ok', visible=False)],
    ]
    return sg.Window('–û—Ä–≥–∞–Ω–∞–π–∑–µ—Ä', layout, icon=r'1.ico', size=(500, 250), resizable=True, finalize=True, grab_anywhere=True, element_justification='c')

que = [  # –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è –æ–ø—Ä–æ—Å–∞
    '1. –ú–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã ‚Äú—Ä–∞—Å–∫–∞—á–∞—Ç—å—Å—è‚Äù –∏ –Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å',
    '2. –Ø –ø–ª–∞–Ω–∏—Ä—É—é –º–æ–∏ –¥–µ–ª–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
    '3. –ú–µ–Ω—è –≤—ã–≤–æ–¥—è—Ç –∏–∑ —Å–µ–±—è –∏ –≤—ã–±–∏–≤–∞—é—Ç –∏–∑ –ø—Ä–∏–≤—ã—á–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –¥–µ–ª–∞',
    '4. –û–±—ã—á–Ω–æ —è –Ω–∞–º–µ—á–∞—é –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ –¥–µ–Ω—å –∏ —Å—Ç–∞—Ä–∞—é—Å—å –µ–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å',
    '5. –ú–Ω–µ –±—ã–≤–∞–µ—Ç —Ç—Ä—É–¥–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—á–∞—Ç–æ–µ',
    '6. –Ø –Ω–µ –º–æ–≥—É –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –Ω–∞—á–∞—Ç–æ–≥–æ –¥–µ–ª–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–æ –º–Ω–µ ¬´–Ω–µ –ø–æ –∑—É–±–∞–º¬ª',
    '7. –Ø –∑–Ω–∞—é, —á–µ–≥–æ —Ö–æ—á—É, –∏ –¥–µ–ª–∞—é –≤—Å–µ, —á—Ç–æ–±—ã —ç—Ç–æ–≥–æ –¥–æ–±–∏—Ç—å—Å—è',
    '8. –Ø –∑–∞—Ä–∞–Ω–µ–µ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—é –ø–ª–∞–Ω –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–≥–æ –¥–Ω—è',
    '9. –ú–Ω–µ –±–æ–ª–µ–µ –≤–∞–∂–Ω–æ —Ç–æ, —á—Ç–æ —è –¥–µ–ª–∞—é –∏ –ø–µ—Ä–µ–∂–∏–≤–∞—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –∞ –Ω–µ —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –∏–ª–∏ –±—ã–ª',
    '10. –Ø –º–æ–≥—É –Ω–∞—á–∞—Ç—å –¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–ª –∏ –Ω–∏ –æ–¥–Ω–æ –∏–∑ –Ω–∏—Ö –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å',
    '11. –Ø –ø–ª–∞–Ω–∏—Ä—É—é –º–æ–∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–ª–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º',
    '12. –Ø —Å—á–∏—Ç–∞—é —Å–µ–±—è —á–µ–ª–æ–≤–µ–∫–æ–º, –∂–∏–≤—É—â–∏–º ¬´–∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å¬ª',
    '13. –Ø –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–º—É –¥–µ–ª—É, –µ—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ',
    '14. –Ø —Å—á–∏—Ç–∞—é —Å–µ–±—è —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º',
    '15. –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –¥–µ–ª–∞–º–∏, —è —á–∞—Å—Ç–æ –ø–æ–ø—É—Å—Ç—É —Ç—Ä–∞—á—É –≤—Ä–µ–º—è',
    '16. –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫ –∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤ –Ω–µ–º –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–µ —Å–æ –º–Ω–æ–π',
    '17. –ò–Ω–æ–≥–¥–∞ —è –¥–∞–∂–µ –Ω–µ –º–æ–≥—É –∑–∞—Å–Ω—É—Ç—å, –≤—Å–ø–æ–º–Ω–∏–≤ –æ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–Ω—ã—Ö –¥–µ–ª–∞—Ö',
    '18. –ú–Ω–µ –µ—Å—Ç—å –∫ —á–µ–º—É —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è',
    '19. –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–æ–º –∏ –∏–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏',
    '20. –ú–æ—è –∂–∏–∑–Ω—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
    '21. –£ –º–µ–Ω—è –±—ã–≤–∞—é—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–∏–µ–º –º–æ–∏—Ö –¥–µ–ª',
    '22. –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø–∏—Å–∞—Ç—å –æ—Ç—á–µ—Ç—ã –ø–æ –∏—Ç–æ–≥–∞–º —Ä–∞–±–æ—Ç—ã',
    '23. –Ø –Ω–∏ –∫ —á–µ–º—É –Ω–µ —Å—Ç—Ä–µ–º–ª—é—Å—å',
    '24. –ï—Å–ª–∏ —è –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª –∫–∞–∫–æ–µ-—Ç–æ –¥–µ–ª–æ, —Ç–æ —ç—Ç–æ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç —É –º–µ–Ω—è –∏–∑ –≥–æ–ª–æ–≤—ã',
    '25. –£ –º–µ–Ω—è –µ—Å—Ç—å –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å –≤ –∂–∏–∑–Ω–∏'
]
# –î–ª—è –±—É–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–º —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ sg.Text
text_opros = '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–∞—à–µ–≥–æ —É—Ä–æ–≤–Ω—è —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n' \
             '–í–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è 25 —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π, –∫–∞—Å–∞—é—â–∏—Ö—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –í–∞—à–µ–π –∂–∏–∑–Ω–∏ –∏ —Å–ø–æ—Å–æ–±–æ–≤ –æ–±—Ä–∞—â–µ–Ω–∏—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º. ' \
             '–í–≤–µ–¥–∏—Ç–µ –≤ –ø–æ–ª–µ —Ç—É —Ü–∏—Ñ—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –≤ –Ω–∞–∏–±–æ–ª—å—à–µ–π –º–µ—Ä–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç –í–∞—Å –∏ –æ—Ç—Ä–∞–∂–∞–µ—Ç –í–∞—à—É —Ç–æ—á–∫—É –∑—Ä–µ–Ω–∏—è ' \
             '(1 ‚Äî –ø–æ–ª–Ω–æ–µ –Ω–µ—Å–æ–≥–ª–∞—Å–∏–µ, 7 ‚Äî –ø–æ–ª–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –¥–∞–Ω–Ω—ã–º —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º, 4 ‚Äî —Å–µ—Ä–µ–¥–∏–Ω–∞ —à–∫–∞–ª—ã, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ü–∏—Ñ—Ä—ã ‚Äî –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è'
count = 0
def make_after_login():
    layout = [  # –ü—Ä–µ—Å–µ—Ç –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ –í–æ–π—Ç–∏
        [sg.Text(text='–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–∞—à–µ–≥–æ —É—Ä–æ–≤–Ω—è —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', font=fonts[0])],
        [sg.Text(
            text='–í–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è 25 —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π, –∫–∞—Å–∞—é—â–∏—Ö—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –í–∞—à–µ–π –∂–∏–∑–Ω–∏ –∏ —Å–ø–æ—Å–æ–±–æ–≤ –æ–±—Ä–∞—â–µ–Ω–∏—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º. –í–≤–µ–¥–∏—Ç–µ –≤ –ø–æ–ª–µ —Ç—É —Ü–∏—Ñ—Ä—É, –∫–æ—Ç–æ—Ä–∞—è ', font=fonts[1])],
        [sg.Text(
            text='–≤ –Ω–∞–∏–±–æ–ª—å—à–µ–π –º–µ—Ä–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç –í–∞—Å –∏ –æ—Ç—Ä–∞–∂–∞–µ—Ç –í–∞—à—É —Ç–æ—á–∫—É –∑—Ä–µ–Ω–∏—è (1 ‚Äî –ø–æ–ª–Ω–æ–µ –Ω–µ—Å–æ–≥–ª–∞—Å–∏–µ, 7 ‚Äî –ø–æ–ª–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –¥–∞–Ω–Ω—ã–º —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º, 4 ‚Äî —Å–µ—Ä–µ–¥–∏–Ω–∞ ', font=fonts[1])],
        [sg.Text(text='—à–∫–∞–ª—ã, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ü–∏—Ñ—Ä—ã ‚Äî –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)', font=fonts[1])],
        [sg.Text(text=que[count], key=('opros'), font=fonts[1]), sg.Slider(range=(1,7), orientation='horizontal', tick_interval=1, default_value=4, key='input1')],
        [sg.Button(button_text=('–î–∞–ª–µ–µ'), size=(10, 1), key=('next'))],
        [sg.Text('–ë–∞–ª–ª—ã:'), sg.Text('', size=(3, 1), key=('sum'), font=fonts[1])],
        [sg.Button(button_text=('–ó–∞–≤–µ—Ä—à–∏—Ç—å'), size=(10, 1), key=('end'), visible=False)]
    ]
    return sg.Window('–û–ø—Ä–æ—Å', layout, resizable=True, finalize=True, grab_anywhere=True, element_justification='c')

open = False

def make_register():
    layout = [     #[sg.Text('Enter the value',justification='center',size=(100,1))],
        [sg.Text('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', font=fonts[0])],
        [sg.Text('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é   ', font=fonts[1], key=('surname')), sg.Input('', size=(40, 1), key=('input_sur'))],
        [sg.Text('–í–≤–µ–¥–∏—Ç–µ –∏–º—è            ', font=fonts[1], key=('name')), sg.Input('', size=(40, 1), key=('input_name'))],
        [sg.Text('–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ   ', font=fonts[1], key=('patronymic')), sg.Input('', size=(40, 1), key=('input_patr'))],
        [sg.Text('–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω   ', font=fonts[1], key=('login')), sg.Input('', size=(40, 1), key=('input_login'))],
        [sg.Text('–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å', font=fonts[1], key=('pass')), sg.Input('', size=(28, 1), key=('input_pass'), password_char='*'), sg.Button(button_text='      üëÅÔ∏è', font=fonts[1], key=('open_pass'))],
        [sg.Text('–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å   ', font=fonts[1], key=('pass_check')), sg.Input('', size=(40, 1), key=('input_check'), password_char='*')],
        [sg.Text('*–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤', font=fonts[1])],
        [sg.Button(button_text=('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'), size=(20, 1), key=('reg_complete'))],
        [sg.Text('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!', font=fonts[1], key='reg_check', visible=False)]
    ]
    return sg.Window('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', layout, resizable=True, finalize=True, grab_anywhere=True, element_justification='c')

def make_rezult():
    layout = [
        [sg.Text(text='–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞', font=fonts[0])],
        [sg.Text(text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±—Ä–∞–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤: '),sg.Text('', size=(3, 1), key=('rez'), font=fonts[1])],
        [sg.Text(text='', key=('rezt'), font=fonts[1])],
        [sg.Button(button_text=('–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø—Ä–æ—Å'), size=(20, 1), key=('opros_complete'))]
    ]
    return sg.Window('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', layout, resizable=True, finalize=True, grab_anywhere=True, element_justification='c')

window = make_main_menu()
score = 0

while True:
    event, values = window.read()
    if event == sg.WIN_CLOSED:
        break
    elif 'enter' in event:
        cursor.execute('SELECT pass FROM USER_LOGIN_DATA where login = "' + values['input_main_login'] + '"')
        executed_str = ''.join(str(cursor.fetchone()))
        executed_str = re.sub("[^A-Za-z0-9]", "", executed_str)
        if executed_str == values['input_main_pass']:
            window.close()
            window = make_after_login()
        else:
            window.Element('error_mes').Update(visible=True)
    elif 'register' in event:
        window.close()
        window = make_register()
    elif 'next' in event:
        if count == 0 or count == 4 or count == 9 or count == 14 or count == 20 or count == 22:
            if int(values['input1']) == 1:
                score = score + 7           # –ó–¥–µ—Å—å —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π —Å –æ–±—Ä–∞—Ç–Ω—ã–º —Ä–∞—Å—Å—á—ë—Ç–æ–º –±–∞–ª–ª–æ–≤
            if int(values['input1']) == 7:  # –ù–∞–ø—Ä–∏–º–µ—Ä, —É–∫–∞–∑–∞–ª–∏ 7 - –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±–µ—Ä—ë—Ç 1 –∏ —Ç.–¥.
                score = score + 1
            if int(values['input1']) == 2:
                score = score + 6
            if int(values['input1']) == 6:
                score = score + 2
            if int(values['input1']) == 3:
                score = score + 5
            if int(values['input1']) == 5:
                score = score + 3
            if int(values['input1']) == 4:
                score = score + 4
        else:
            score = score + int(values['input1'])
        window.Element('sum').Update(value=score)
        count = count + 1
        # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ 25 (–¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, 3)
        if count < 25:
            window.Element('opros').Update(value=que[count])
            window.Element('input1').Update(value='')
            # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ 24 (–¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2)
            if count == 24:
                window.Element('next').Update(visible=False)
                window.Element('end').Update(visible=True)
    elif 'end' in event:
        score = score + int(values['input1'])
        window.close()
        window = make_rezult()
        window.Element('rez').Update(value=score)
        if 0 < score < 59:
            window.Element('rezt').Update(value='–í–∞—à —É—Ä–æ–≤–µ–Ω—å —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∏–∑–∫–∏–π.')
        if 58 < score < 117:
            window.Element('rezt').Update(value='–í–∞—à —É—Ä–æ–≤–µ–Ω—å —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ä–µ–¥–Ω–∏–π.')
        if 116 < score < 176:
            window.Element('rezt').Update(value='–í–∞—à —É—Ä–æ–≤–µ–Ω—å —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–∏–π.')
    elif 'open_pass' in event:
        if open:
            open = False
            window.Element('input_pass').Update(password_char='*')
        else:
            open = True
            window.Element('input_pass').Update(password_char='')
    elif 'reg_complete' in event:
        if str(values['input_pass']).__len__() < 8:
            window.Element('reg_check').Update(value='–ü–∞—Ä–æ–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω—å—à–µ 8-–º–∏ —Å–∏–º–≤–æ–ª–æ–≤!', visible=True)
        elif values['input_pass'] != values['input_check']:
            window.Element('reg_check').Update(value='–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!', visible=True)
        elif values['input_sur'] == '' or values['input_name'] == '' or values['input_patr'] == '' or values['input_login'] == '' or values['input_pass'] == '' or values['input_check'] == '':
            window.Element('reg_check').Update(value='–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!',visible=True)
        else:
            sql = 'INSERT INTO USER_LOGIN_DATA (id, surname, name, patronymic, login, pass, admin) values(?, ?, ?, ?, ?, ?, ?)'
            last = ''.join(str(cursor.execute("SELECT Id FROM USER_LOGIN_DATA ORDER BY Id DESC LIMIT 1").fetchone()))
            last = int(''.join(i for i in last if i.isdigit()))+1
            data = [
                (last, values['input_sur'], values['input_name'], values['input_patr'], values['input_login'], values['input_pass'], 0)
            ]
            with con:
                con.executemany(sql, data)
            window.close()
            window = make_main_menu()
            window.Element('complete_ok').Update(visible=True)
    elif 'opros_complete':
        window.close()
        window = make_main_menu()
window.close()
